on:
  push:
    branches: [main, fix-tests]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]  # Specify the Python versions you want to test against
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache Poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.6.1-0
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}
      
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install project
        run: poetry install --no-interaction
      
      - name: Run tests
        run: poetry run pytest
      
      - name: Check code formatting with Black
        run: poetry run black . --check
      
      - name: Check import sorting with isort
        run: poetry run isort --profile black .
      
      - name: Lint with Ruff
        run: poetry run ruff . --line-length 120
      
      - name: Lint with pylint
        run: poetry run pylint clusterfun --max-line-length 120